Coverage Report by instance with details

=================================================================================
=== Instance: /ALSU_tb/DUT
=== Design Unit: work.ALSU
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32        23         9    71.87%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
------------------------------------IF Branch------------------------------------
    23                                        36     Count coming in to IF
    23              1                          4       if(rst) begin
    34              1                         32       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                        36     Count coming in to IF
    50              1                          4       if(rst) begin
    52              1                         32       end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    53                                        32     Count coming in to IF
    53              1                          6           if (invalid)
    55              1                         26           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                        34     Count coming in to IF
    62              1                          4       if(rst) begin
    65              1                         30       else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                        30     Count coming in to IF
    66              1                          6         if (invalid) 
    68              1                    ***0***         else if (bypass_A_reg && bypass_B_reg)
    70              1                    ***0***         else if (bypass_A_reg)
    72              1                          2         else if (bypass_B_reg)
    75              1                         22         else begin
Branch totals: 3 hits of 5 branches = 60.00%

------------------------------------CASE Branch------------------------------------
    76                                        22     Count coming in to CASE
    77              1                          9               3'h0: begin
    88              1                          3               3'h1: begin
    98              1                    ***0***               3'h2:begin
    105             1                    ***0***               3'h3: out <= A_reg * B_reg;
    106             1                          5               3'h4: begin
    112             1                          5               3'h5: begin
                                         ***0***     All False Count
Branch totals: 4 hits of 7 branches = 57.14%

------------------------------------IF Branch------------------------------------
    79                                         9     Count coming in to IF
    79              1                          2                 if (red_op_A_reg && red_op_B_reg)
    81              1                    ***0***                 else if (red_op_A_reg) 
    83              1                          4                 else if (red_op_B_reg)
    85              1                          3                 else 
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    89                                         3     Count coming in to IF
    89              1                          1                 if (red_op_A_reg && red_op_B_reg)
    91              1                    ***0***                 else if (red_op_A_reg) 
    93              1                    ***0***                 else if (red_op_B_reg)
    95              1                          2                 else 
Branch totals: 2 hits of 4 branches = 50.00%

------------------------------------IF Branch------------------------------------
    107                                        5     Count coming in to IF
    107             1                          3                 if (direction_reg)
    109             1                          2                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    113                                        5     Count coming in to IF
    113             1                    ***0***                 if (direction_reg)
    115             1                          5                 else
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       6         2         4    33.33%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb/DUT --

  File ALSU.v
----------------Focused Condition View-------------------
Line       68 Item    1  (bypass_A_reg && bypass_B_reg)
Condition totals: 0 of 2 input terms covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  bypass_A_reg         N  '_1' not hit             Hit '_1'
  bypass_B_reg         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_reg_0        -                             
  Row   2:    ***0***  bypass_A_reg_1        bypass_B_reg                  
  Row   3:    ***0***  bypass_B_reg_0        bypass_A_reg                  
  Row   4:    ***0***  bypass_B_reg_1        bypass_A_reg                  

----------------Focused Condition View-------------------
Line       79 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 1 of 2 input terms covered = 50.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:    ***0***  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  

----------------Focused Condition View-------------------
Line       89 Item    1  (red_op_A_reg && red_op_B_reg)
Condition totals: 1 of 2 input terms covered = 50.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  red_op_A_reg         Y
  red_op_B_reg         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        -                             
  Row   2:          1  red_op_A_reg_1        red_op_B_reg                  
  Row   3:    ***0***  red_op_B_reg_0        red_op_A_reg                  
  Row   4:          1  red_op_B_reg_1        red_op_A_reg                  


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      8         3         5    37.50%

================================Expression Details================================

Expression Coverage for instance /ALSU_tb/DUT --

  File ALSU.v
----------------Focused Expression View-----------------
Line       17 Item    1  ((red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]))
Expression totals: 2 of 4 input terms covered = 50.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
   red_op_A_reg         N  '_1' not hit             Hit '_1'
   red_op_B_reg         Y
  opcode_reg[1]         N  '_1' not hit             Hit '_1'
  opcode_reg[2]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   2:    ***0***  red_op_A_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_B_reg)
  Row   3:          1  red_op_B_reg_0        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   4:          1  red_op_B_reg_1        ((opcode_reg[1] | opcode_reg[2]) && ~red_op_A_reg)
  Row   5:          1  opcode_reg[1]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   6:    ***0***  opcode_reg[1]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[2])
  Row   7:          1  opcode_reg[2]_0       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])
  Row   8:          1  opcode_reg[2]_1       ((red_op_A_reg | red_op_B_reg) && ~opcode_reg[1])

----------------Focused Expression View-----------------
Line       18 Item    1  (opcode_reg[1] & opcode_reg[2])
Expression totals: 0 of 2 input terms covered = 0.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  opcode_reg[1]         N  '_1' not hit             Hit '_1'
  opcode_reg[2]         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  opcode_reg[1]_0       opcode_reg[2]                 
  Row   2:    ***0***  opcode_reg[1]_1       opcode_reg[2]                 
  Row   3:    ***0***  opcode_reg[2]_0       opcode_reg[1]                 
  Row   4:    ***0***  opcode_reg[2]_1       opcode_reg[1]                 

----------------Focused Expression View-----------------
Line       19 Item    1  (invalid_red_op | invalid_opcode)
Expression totals: 1 of 2 input terms covered = 50.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  invalid_red_op         Y
  invalid_opcode         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  invalid_red_op_0      ~invalid_opcode               
  Row   2:          1  invalid_red_op_1      ~invalid_opcode               
  Row   3:          1  invalid_opcode_0      ~invalid_red_op               
  Row   4:    ***0***  invalid_opcode_1      ~invalid_red_op               


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      49        41         8    83.67%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU.v
    1                                                module ALSU(A, B, cin, serial_in, red_op_A, red_op_B, opcode, bypass_A, bypass_B, clk, rst, direction, leds, out);
    2                                                parameter INPUT_PRIORITY = "A";
    3                                                parameter FULL_ADDER = "ON";
    4                                                input clk, rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    5                                                input [2:0] opcode;
    6                                                input signed[2:0] A, B;
    7                                                output reg [15:0] leds;
    8                                                output reg signed [5:0] out;
    9                                                
    10                                               reg red_op_A_reg, red_op_B_reg, bypass_A_reg, bypass_B_reg, direction_reg, serial_in_reg;
    11                                               reg signed [1:0]cin_reg;
    12                                               reg [2:0] opcode_reg;
    13                                               reg signed [2:0]A_reg, B_reg;
    14                                               wire invalid_red_op, invalid_opcode, invalid;
    15                                               
    16                                               //Invalid handling
    17              1                         19     assign invalid_red_op = (red_op_A_reg | red_op_B_reg) & (opcode_reg[1] | opcode_reg[2]);
    18              1                         19     assign invalid_opcode = opcode_reg[1] & opcode_reg[2];
    19              1                          8     assign invalid = invalid_red_op | invalid_opcode;
    20                                               
    21                                               //Registering input signals
    22              1                         36     always @(posedge clk or posedge rst) begin
    23                                                 if(rst) begin
    24              1                          4          cin_reg <= 0;
    25              1                          4          red_op_B_reg <= 0;
    26              1                          4          red_op_A_reg <= 0;
    27              1                          4          bypass_B_reg <= 0;
    28              1                          4          bypass_A_reg <= 0;
    29              1                          4          direction_reg <= 0;
    30              1                          4          serial_in_reg <= 0;
    31              1                          4          opcode_reg <= 0;
    32              1                          4          A_reg <= 0;
    33              1                          4          B_reg <= 0;
    34                                                 end else begin
    35              1                         32          cin_reg <= cin;
    36              1                         32          red_op_B_reg <= red_op_B;
    37              1                         32          red_op_A_reg <= red_op_A;
    38              1                         32          bypass_B_reg <= bypass_B;
    39              1                         32          bypass_A_reg <= bypass_A;
    40              1                         32          direction_reg <= direction;
    41              1                         32          serial_in_reg <= serial_in;
    42              1                         32          opcode_reg <= opcode;
    43              1                         32          A_reg <= A;
    44              1                         32          B_reg <= B;
    45                                                 end
    46                                               end
    47                                               
    48                                               //leds output blinking 
    49              1                         36     always @(posedge clk or posedge rst) begin
    50                                                 if(rst) begin
    51              1                          4          leds <= 0;
    52                                                 end else begin
    53                                                     if (invalid)
    54              1                          6             leds <= ~leds;
    55                                                     else
    56              1                         26             leds <= 0;
    57                                                 end
    58                                               end
    59                                               
    60                                               //ALSU output processing
    61              1                         34     always @(posedge clk or posedge rst) begin
    62                                                 if(rst) begin
    63              1                          4         out <= 0;
    64                                                 end
    65                                                 else begin
    66                                                   if (invalid) 
    67              1                          6             out <= 0;
    68                                                   else if (bypass_A_reg && bypass_B_reg)
    69              1                    ***0***           out <= (INPUT_PRIORITY == "A")? A_reg: B_reg;
    70                                                   else if (bypass_A_reg)
    71              1                    ***0***           out <= A_reg;
    72                                                   else if (bypass_B_reg)
    73              1                          2           out <= B_reg;
    74                                               
    75                                                   else begin
    76                                                       case (opcode_reg)
    77                                                         3'h0: begin
    78              1                          9                 leds <= 16'h0; 
    79                                                           if (red_op_A_reg && red_op_B_reg)
    80              1                          2                   out = (INPUT_PRIORITY == "A")? |A_reg: |B_reg;
    81                                                           else if (red_op_A_reg) 
    82              1                    ***0***                   out <= |A_reg;
    83                                                           else if (red_op_B_reg)
    84              1                          4                   out <= |B_reg;
    85                                                           else 
    86              1                          3                   out <= A_reg | B_reg;
    87                                                         end
    88                                                         3'h1: begin
    89                                                           if (red_op_A_reg && red_op_B_reg)
    90              1                          1                   out <= (INPUT_PRIORITY == "A")? ^A_reg: ^B_reg;
    91                                                           else if (red_op_A_reg) 
    92              1                    ***0***                   out <= ^A_reg;
    93                                                           else if (red_op_B_reg)
    94              1                    ***0***                   out <= ^B_reg;
    95                                                           else 
    96              1                          2                   out <= A_reg ^ B_reg;
    97                                                         end
    98                                                         3'h2:begin
    99                                                           if(FULL_ADDER == "ON")
    100             1                    ***0***                 out <= A_reg + B_reg + cin_reg;
    101                                                          else  
    102                                                          out <= A_reg + B_reg;
    103                                                        end
    104                                              
    105             1                    ***0***               3'h3: out <= A_reg * B_reg;
    106                                                        3'h4: begin
    107                                                          if (direction_reg)
    108             1                          3                   out <= {out[4:0], serial_in_reg};
    109                                                          else
    110             1                          2                   out <= {serial_in_reg, out[5:1]};
    111                                                        end
    112                                                        3'h5: begin
    113                                                          if (direction_reg)
    114             1                    ***0***                   out <= {out[4:0], out[5]};
    115                                                          else
    116             1                          5                   out <= {out[0], out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        120       108        12    90.00%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb/DUT --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                            A[0-2]           1           1                              100.00 
                                        A_reg[2-0]           1           1                              100.00 
                                            B[0-2]           1           1                              100.00 
                                        B_reg[2-0]           1           1                              100.00 
                                          bypass_A           0           0                                0.00 
                                      bypass_A_reg           0           0                                0.00 
                                          bypass_B           1           1                              100.00 
                                      bypass_B_reg           1           1                              100.00 
                                               cin           1           1                              100.00 
                                        cin_reg[1]           0           0                                0.00 
                                        cin_reg[0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                         direction           1           1                              100.00 
                                     direction_reg           1           1                              100.00 
                                           invalid           1           1                              100.00 
                                    invalid_opcode           0           0                                0.00 
                                    invalid_red_op           1           1                              100.00 
                                        leds[15-0]           1           1                              100.00 
                                         opcode[0]           1           1                              100.00 
                                         opcode[1]           0           0                                0.00 
                                         opcode[2]           1           1                              100.00 
                                     opcode_reg[2]           1           1                              100.00 
                                     opcode_reg[1]           0           0                                0.00 
                                     opcode_reg[0]           1           1                              100.00 
                                          out[5-0]           1           1                              100.00 
                                          red_op_A           1           1                              100.00 
                                      red_op_A_reg           1           1                              100.00 
                                          red_op_B           1           1                              100.00 
                                      red_op_B_reg           1           1                              100.00 
                                               rst           1           1                              100.00 
                                         serial_in           1           1                              100.00 
                                     serial_in_reg           1           1                              100.00 

Total Node Count     =         60 
Toggled Node Count   =         54 
Untoggled Node Count =          6 

Toggle Coverage      =      90.00% (108 of 120 bins)

=================================================================================
=== Instance: /ALSU_tb
=== Design Unit: work.ALSU_tb
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/ALSU_tb/#ublk#102282978#52/immed__53
                     ALSU_tb.sv(53)                     0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        38        25        13    65.78%

================================Branch Details================================

Branch Coverage for instance /ALSU_tb

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_tb.sv
------------------------------------IF Branch------------------------------------
    66                                        17     Count coming in to IF
    66              1                          1                 if(obj_alsu.rst)begin
    69              1                         16                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                        15     Count coming in to IF
    72              1                         15                     if(!obj_alsu.bypass_A || !obj_alsu.bypass_B || obj_alsu.rst)begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    128                                        2     Count coming in to IF
    128             1                    ***0***             if(out !== 0 && leds!== 0) begin
    132             1                          2             else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    138                                       16     Count coming in to IF
    138             1                          1             if((out !== exp_out) || (leds !== exp_leds))begin
    144             1                         15             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    147                                       15     Count coming in to IF
    147             1                          9             if (opcode == SHIFT || opcode ==ROTATE )begin
    150             1                    ***0***             else if (exp_leds == 16'hFFFF)begin
                                               6     All False Count
Branch totals: 2 hits of 3 branches = 66.66%

------------------------------------IF Branch------------------------------------
    157                                       26     Count coming in to IF
    157             1                          1             if(rst)begin
    161             1                         25             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    163                                       25     Count coming in to IF
    163             1                          6                 if ((red_op_A || red_op_B) && (opcode != 3'b000) && (opcode != 3'b001)) begin
    167             1                    ***0***                 else if(opcode == INVALID_6 || opcode == INVALID_7)begin
    171             1                    ***0***                 else if (bypass_A && bypass_B) 
    173             1                    ***0***                 else if (bypass_A) 
    175             1                          2                 else if (bypass_B) 
    177             1                         17                 else begin
Branch totals: 3 hits of 6 branches = 50.00%

------------------------------------CASE Branch------------------------------------
    178                                       17     Count coming in to CASE
    179             1                          4                         OR: begin 
    190             1                          2                         XOR: begin 
    201             1                    ***0***                         ADD: begin
    208             1                    ***0***                         MULTI: begin 
    211             1                          5                         SHIFT: begin
    214             1                          6                         ROTATE: begin
                                         ***0***     All False Count
Branch totals: 4 hits of 7 branches = 57.14%

------------------------------------IF Branch------------------------------------
    180                                        4     Count coming in to IF
    180             1                          1                             if (red_op_A && red_op_B) begin
    182             1                    ***0***                             end else if (red_op_A) begin
    184             1                          2                             end else if (red_op_B) begin
    186             1                          1                             end else begin
Branch totals: 3 hits of 4 branches = 75.00%

------------------------------------IF Branch------------------------------------
    191                                        2     Count coming in to IF
    191             1                          1                             if (red_op_A && red_op_B) begin
    193             1                    ***0***                             end else if (red_op_A) begin
    195             1                    ***0***                             end else if (red_op_B) begin
    197             1                          1                             end else begin
Branch totals: 2 hits of 4 branches = 50.00%

------------------------------------IF Branch------------------------------------
    212                                        5     Count coming in to IF
    212             1                          3                             exp_out = direction ? {exp_out[4:0], serial_in} : {serial_in, exp_out[5:1]};
    212             2                          2                             exp_out = direction ? {exp_out[4:0], serial_in} : {serial_in, exp_out[5:1]};
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    215                                        6     Count coming in to IF
    215             1                    ***0***                             exp_out = direction ? {exp_out[4:0], exp_out[5]} : {exp_out[0], exp_out[5:1]};
    215             2                          6                             exp_out = direction ? {exp_out[4:0], exp_out[5]} : {exp_out[0], exp_out[5:1]};
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      22         8        14    36.36%

================================Condition Details================================

Condition Coverage for instance /ALSU_tb --

  File ALSU_tb.sv
----------------Focused Condition View-------------------
Line       72 Item    1  (~obj_alsu.bypass_A || ~obj_alsu.bypass_B || obj_alsu.rst)
Condition totals: 0 of 3 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  obj_alsu.bypass_A         N  '_1' not hit             Hit '_1'
  obj_alsu.bypass_B         N  No hits                  Hit '_0' and '_1'
       obj_alsu.rst         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  obj_alsu.bypass_A_0   -                             
  Row   2:    ***0***  obj_alsu.bypass_A_1   ~(~obj_alsu.bypass_B || obj_alsu.rst)
  Row   3:    ***0***  obj_alsu.bypass_B_0   obj_alsu.bypass_A             
  Row   4:    ***0***  obj_alsu.bypass_B_1   (obj_alsu.bypass_A && ~obj_alsu.rst)
  Row   5:    ***0***  obj_alsu.rst_0        (obj_alsu.bypass_A && obj_alsu.bypass_B)
  Row   6:    ***0***  obj_alsu.rst_1        (obj_alsu.bypass_A && obj_alsu.bypass_B)

----------------Focused Condition View-------------------
Line       128 Item    1  ((out !== 0) && (leds !== 0))
Condition totals: 0 of 2 input terms covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
   (out !== 0)         N  '_1' not hit             Hit '_1'
  (leds !== 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (out !== 0)_0         -                             
  Row   2:    ***0***  (out !== 0)_1         (leds !== 0)                  
  Row   3:    ***0***  (leds !== 0)_0        (out !== 0)                   
  Row   4:    ***0***  (leds !== 0)_1        (out !== 0)                   

----------------Focused Condition View-------------------
Line       138 Item    1  ((out !== exp_out) || (leds !== exp_leds))
Condition totals: 1 of 2 input terms covered = 50.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
    (out !== exp_out)         Y
  (leds !== exp_leds)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (out !== exp_out)_0    ~(leds !== exp_leds)          
  Row   2:          1  (out !== exp_out)_1    -                             
  Row   3:          1  (leds !== exp_leds)_0  ~(out !== exp_out)            
  Row   4:    ***0***  (leds !== exp_leds)_1  ~(out !== exp_out)            

----------------Focused Condition View-------------------
Line       147 Item    1  ((opcode == SHIFT) || (opcode == ROTATE))
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
   (opcode == SHIFT)         Y
  (opcode == ROTATE)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (opcode == SHIFT)_0   ~(opcode == ROTATE)           
  Row   2:          1  (opcode == SHIFT)_1   -                             
  Row   3:          1  (opcode == ROTATE)_0  ~(opcode == SHIFT)            
  Row   4:          1  (opcode == ROTATE)_1  ~(opcode == SHIFT)            

----------------Focused Condition View-------------------
Line       150 Item    1  (exp_leds == 65535)
Condition totals: 0 of 1 input term covered = 0.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (exp_leds == 65535)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (exp_leds == 65535)_0  -                             
  Row   2:    ***0***  (exp_leds == 65535)_1  -                             

----------------Focused Condition View-------------------
Line       163 Item    1  (((red_op_A || red_op_B) && (opcode != 0)) && (opcode != 1))
Condition totals: 3 of 4 input terms covered = 75.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
       red_op_A         N  '_1' not hit             Hit '_1'
       red_op_B         Y
  (opcode != 0)         Y
  (opcode != 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_0            ~red_op_B                     
  Row   2:    ***0***  red_op_A_1            ((opcode != 1) && (opcode != 0))
  Row   3:          1  red_op_B_0            ~red_op_A                     
  Row   4:          1  red_op_B_1            ((opcode != 1) && (opcode != 0) && ~red_op_A)
  Row   5:          1  (opcode != 0)_0       (red_op_A || red_op_B)        
  Row   6:          1  (opcode != 0)_1       ((opcode != 1) && (red_op_A || red_op_B))
  Row   7:          1  (opcode != 1)_0       ((red_op_A || red_op_B) && (opcode != 0))
  Row   8:          1  (opcode != 1)_1       ((red_op_A || red_op_B) && (opcode != 0))

----------------Focused Condition View-------------------
Line       167 Item    1  ((opcode == INVALID_6) || (opcode == INVALID_7))
Condition totals: 0 of 2 input terms covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (opcode == INVALID_6)         N  '_1' not hit             Hit '_1'
  (opcode == INVALID_7)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (opcode == INVALID_6)_0  ~(opcode == INVALID_7)        
  Row   2:    ***0***  (opcode == INVALID_6)_1  -                             
  Row   3:          1  (opcode == INVALID_7)_0  ~(opcode == INVALID_6)        
  Row   4:    ***0***  (opcode == INVALID_7)_1  ~(opcode == INVALID_6)        

----------------Focused Condition View-------------------
Line       171 Item    1  (bypass_A && bypass_B)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    bypass_A         N  '_1' not hit             Hit '_1'
    bypass_B         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  bypass_A_0            -                             
  Row   2:    ***0***  bypass_A_1            bypass_B                      
  Row   3:    ***0***  bypass_B_0            bypass_A                      
  Row   4:    ***0***  bypass_B_1            bypass_A                      

----------------Focused Condition View-------------------
Line       180 Item    1  (red_op_A && red_op_B)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    red_op_A         Y
    red_op_B         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_0            -                             
  Row   2:          1  red_op_A_1            red_op_B                      
  Row   3:    ***0***  red_op_B_0            red_op_A                      
  Row   4:          1  red_op_B_1            red_op_A                      

----------------Focused Condition View-------------------
Line       191 Item    1  (red_op_A && red_op_B)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    red_op_A         Y
    red_op_B         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  red_op_A_0            -                             
  Row   2:          1  red_op_A_1            red_op_B                      
  Row   3:    ***0***  red_op_B_0            red_op_A                      
  Row   4:          1  red_op_B_1            red_op_A                      


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      86        50        36    58.13%

================================Statement Details================================

Statement Coverage for instance /ALSU_tb --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ALSU_tb.sv
    5                                                module ALSU_tb;
    6                                                
    7                                                    //parameters
    8                                                    parameter INPUT_PRIORITY = "A";
    9                                                    parameter FULL_ADDER = "ON";
    10                                               
    11                                                   //Signals declairation
    12                                                   //input ports
    13                                                   bit clk, rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    14                                                   opcode_e opcode;
    15                                                   bit signed[2:0]A,B;
    16                                                   //output ports
    17                                                   logic [15:0]leds;
    18                                                   logic signed[5:0]out;
    19                                               
    20                                                   //internal signals to register the stimulus for golden model
    21                                                   bit signed [1:0]cin_reg;
    22                                               
    23              1                          9         assign cin_reg = {1'b0 , cin };
    24                                                   bit [15:0]exp_leds;
    25                                                   bit signed[5:0]exp_out;
    26                                               
    27                                                   //variables
    28                                                   integer error_count = 0;
    29                                                   integer correct_count = 0;
    30                                               
    31                                                   //create object
    32              1                          1         alsu_class obj_alsu = new();
    33                                               
    34                                                   //module instantiations
    35                                                   ALSU DUT(.*);
    36                                               
    37                                                   //clock generation
    38                                                   initial begin
    39              1                          1             clk = 0;
    40              1                          1             forever begin
    41              1                         69                 #1 clk = ~clk;
    41              2                         68     
    42                                                       end
    43                                                   end
    44                                               
    45                                                   //test stimulus generation
    46                                                   initial begin
    47              1                          1             exp_leds = 16'hffff; // Initialize expected LEDs
    48              1                          1             assert_reset;
    49                                               
    50                                                       //disable constraint no.8 and enable the others
    51              1                          1             obj_alsu.unique_valid_opcodes.constraint_mode(0);
    52              1                         16             repeat(10000)begin
    53                                                           assert(obj_alsu.randomize());
    54              1                         17                 cin = obj_alsu.cin;
    55              1                         17                 red_op_A = obj_alsu.red_op_A;
    56              1                         17                 red_op_B = obj_alsu.red_op_B;
    57              1                         17                 bypass_A = obj_alsu.bypass_A;
    58              1                         17                 bypass_B = obj_alsu.bypass_B;
    59              1                         17                 direction = obj_alsu.direction;
    60              1                         17                 serial_in = obj_alsu.serial_in;
    61              1                         17                 opcode = obj_alsu.opcode;
    62              1                         17                 A = obj_alsu.A;
    63              1                         17                 B = obj_alsu.B;
    64              1                         17                 rst = obj_alsu.rst;
    65                                               
    66                                                           if(obj_alsu.rst)begin
    67              1                          1                     check_out_equal_0();
    68                                                           end
    69                                                           else begin
    70              1                         16                     @(negedge clk)golden_model;
    70              2                         16     
    71              1                         16                     @(negedge clk)check_result;
    71              2                         16     
    72                                                               if(!obj_alsu.bypass_A || !obj_alsu.bypass_B || obj_alsu.rst)begin
    73              1                         15                         obj_alsu.cvr_gp.sample();
    74                                                               end 
    75                                                           end
    76                                               
    77                                                           // my_sample();
    78                                                       end
    79                                               
    80              1                    ***0***             obj_alsu.constraint_mode(0);   //disable all constraints
    81              1                    ***0***             obj_alsu.unique_valid_opcodes.constraint_mode(1);   //just enable the unique valid opcode 
    82                                               
    83                                                       //directed tests(forced To 0)
    84                                                       //here as specs, we close some inputs
    85              1                    ***0***             rst = 0;
    86              1                    ***0***             bypass_A = 0;
    87              1                    ***0***             bypass_B = 0;
    88              1                    ***0***             red_op_A = 0;
    89              1                    ***0***             red_op_B = 0;
    90                                               
    91              1                    ***0***             repeat(10000)begin
    92                                                           assert(obj_alsu.randomize());
    93                                                           //and here randomize some inputs
    94              1                    ***0***                 cin = obj_alsu.cin;
    95              1                    ***0***                 direction = obj_alsu.direction;
    96              1                    ***0***                 serial_in = obj_alsu.serial_in;
    97              1                    ***0***                 A = obj_alsu.A;
    98              1                    ***0***                 B = obj_alsu.B;
    99                                                           //regard the opcode it's a special case must be unique values of the valid opcodes(not rand like normal case)
    100             1                    ***0***                 for(int i = 0;i < 6;i = i + 1)begin
    100             2                    ***0***     
    101             1                    ***0***                     opcode = obj_alsu.array_opcode[i];
    102             1                    ***0***                     obj_alsu.opcode = obj_alsu.array_opcode[i];
    103             1                    ***0***                     @(negedge clk)golden_model;
    103             2                    ***0***     
    104             1                    ***0***                     @(negedge clk)check_result;
    104             2                    ***0***     
    105             1                    ***0***                     obj_alsu.cvr_gp.sample();
    106                                                          end
    107                                                      end
    108                                              
    109             1                    ***0***             $display("correct_count = %0d,error_count = %0d", correct_count, error_count);
    110             1                    ***0***             $stop;
    111                                                  end
    112                                                  
    113                                                  /*********************************************
    114                                                  *
    115                                                  *           Tasks Implementation           
    116                                                  *
    117                                                  **********************************************/
    118                                                  task assert_reset;
    119             1                          1             rst = 1;  //active reset
    120                                                      //here rst = 1, so when enter the golden model the condition of rst will be activated,so exp_out and exp_leds = 0
    121             1                          1             golden_model; 
    122             1                          1             check_out_equal_0;
    123             1                          1             rst = 0;      //here the rst is toggled from 1 to 0
    124                                                  endtask
    125                                              
    126                                                  task check_out_equal_0;
    127             1                          2             @(negedge clk);
    128                                                      if(out !== 0 && leds!== 0) begin
    129             1                    ***0***                 $display("Error !!");
    130             1                    ***0***                 error_count = error_count + 1;
    131                                                      end
    132                                                      else begin
    133             1                          2                 correct_count = correct_count + 1;
    134                                                      end
    135                                                  endtask
    136                                              
    137                                                  task check_result;
    138                                                      if((out !== exp_out) || (leds !== exp_leds))begin
    139             1                          1                 $display("Error in the output!!,out = %0d,expected_out = %0d,leds = %0d,exp_leds = %0d",
    140                                                                  out,exp_out,leds,exp_leds);
    141             1                          1                 error_count = error_count + 1;
    142             1                          1                 $stop;
    143                                                      end
    144                                                      else begin
    145             1                         15                 correct_count = correct_count + 1;
    146                                                      end
    147                                                      if (opcode == SHIFT || opcode ==ROTATE )begin
    148             1                          9                     golden_model;
    149                                                          end
    150                                                      else if (exp_leds == 16'hFFFF)begin
    151             1                    ***0***                 exp_leds = ~ exp_leds ;
    152                                                      end
    153                                                  endtask
    154                                              
    155                                                   /*****************task to calculate the expected outputs**********/
    156                                                  task golden_model;
    157                                                      if(rst)begin
    158             1                          1                 exp_out = 0;
    159             1                          1                 exp_leds = 0;
    160                                                      end
    161                                                      else begin
    162                                                          //check invalid cases
    163                                                          if ((red_op_A || red_op_B) && (opcode != 3'b000) && (opcode != 3'b001)) begin
    164             1                          6                     exp_leds = ~exp_leds;
    165             1                          6                     exp_out = 6'b0;
    166                                                          end
    167                                                          else if(opcode == INVALID_6 || opcode == INVALID_7)begin
    168             1                    ***0***                     exp_leds = ~exp_leds;
    169             1                    ***0***                     exp_out = 6'b0;
    170                                                          end
    171                                                          else if (bypass_A && bypass_B) 
    172             1                    ***0***                     exp_out = (INPUT_PRIORITY == "A") ? A : B;
    173                                                          else if (bypass_A) 
    174             1                    ***0***                     exp_out = A;
    175                                                          else if (bypass_B) 
    176             1                          2                     exp_out = B;
    177                                                          else begin
    178                                                              case (opcode)
    179                                                                  OR: begin 
    180                                                                      if (red_op_A && red_op_B) begin
    181             1                          1                                 exp_out = (INPUT_PRIORITY == "A") ? |A : |B;
    182                                                                      end else if (red_op_A) begin
    183             1                    ***0***                                 exp_out = |A;
    184                                                                      end else if (red_op_B) begin
    185             1                          2                                 exp_out = |B;
    186                                                                      end else begin
    187             1                          1                                 exp_out = A | B;
    188                                                                      end
    189                                                                  end
    190                                                                  XOR: begin 
    191                                                                      if (red_op_A && red_op_B) begin
    192             1                          1                                 exp_out = (INPUT_PRIORITY == "A") ? ^A : ^B;
    193                                                                      end else if (red_op_A) begin
    194             1                    ***0***                                 exp_out = ^A;
    195                                                                      end else if (red_op_B) begin
    196             1                    ***0***                                 exp_out = ^B;
    197                                                                      end else begin
    198             1                          1                                 exp_out = A ^ B;
    199                                                                      end
    200                                                                  end
    201                                                                  ADD: begin
    202                                                                      if (FULL_ADDER == "ON") begin
    203             1                    ***0***                                 exp_out = A + B + cin_reg;
    204                                                                      end else begin
    205                                                                          exp_out = A + B;
    206                                                                      end
    207                                                                  end
    208                                                                  MULTI: begin 
    209             1                    ***0***                             exp_out = A * B;
    210                                                                  end
    211                                                                  SHIFT: begin
    212             1                          5                             exp_out = direction ? {exp_out[4:0], serial_in} : {serial_in, exp_out[5:1]};
    213                                                                  end
    214                                                                  ROTATE: begin
    215             1                          6                             exp_out = direction ? {exp_out[4:0], exp_out[5]} : {exp_out[0], exp_out[5:1]};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        258       131       127    50.77%

================================Toggle Details================================

Toggle Coverage for instance /ALSU_tb --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                            A[0-2]           1           1                              100.00 
                                            B[0-2]           1           1                              100.00 
                                          bypass_A           0           0                                0.00 
                                          bypass_B           1           1                              100.00 
                                               cin           1           1                              100.00 
                                        cin_reg[0]           1           1                              100.00 
                                        cin_reg[1]           0           0                                0.00 
                                               clk           1           1                              100.00 
                                correct_count[0-3]           1           1                              100.00 
                                  correct_count[4]           0           1                               50.00 
                               correct_count[5-31]           0           0                                0.00 
                                         direction           1           1                              100.00 
                                 error_count[0-31]           0           0                                0.00 
                                    exp_leds[0-15]           1           1                              100.00 
                                      exp_out[0-5]           1           1                              100.00 
                                        leds[0-15]           1           1                              100.00 
                                            opcode               ENUM type       Value       Count 
                                                                        OR           4      100.00 
                                                                       XOR           2      100.00 
                                                                       ADD           0        0.00 
                                                                     MULTI           0        0.00 
                                                                     SHIFT           5      100.00 
                                                                    ROTATE           5      100.00 
                                                                 INVALID_6           0        0.00 
                                                                 INVALID_7           0        0.00 
                                          out[0-5]           1           1                              100.00 
                                          red_op_A           1           1                              100.00 
                                          red_op_B           1           1                              100.00 
                                               rst           1           1                              100.00 
                                         serial_in           1           1                              100.00 

Total Node Count     =        133 
Toggled Node Count   =         67 
Untoggled Node Count =         66 

Toggle Coverage      =      50.77% (131 of 258 bins)

=================================================================================
=== Instance: /alsu_pkg
=== Design Unit: work.alsu_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na    67.98%
        Coverpoints/Crosses         18        na        na        na
            Covergroup Bins         43        26        17    60.46%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /alsu_pkg/alsu_class/cvr_gp                      67.98%        100          -    Uncovered            
    covered/total bins:                                    26         43          -                      
    missing/total bins:                                    17         43          -                      
    % Hit:                                             60.46%        100          -                      
    Coverpoint A_cp0                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint A_cp1                                   33.33%        100          -    Uncovered            
        covered/total bins:                                 1          3          -                      
        missing/total bins:                                 2          3          -                      
        % Hit:                                         33.33%        100          -                      
    Coverpoint B_cp0                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
    Coverpoint B_cp1                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
    Coverpoint ALU_cp                                  57.14%        100          -    Uncovered            
        covered/total bins:                                 4          7          -                      
        missing/total bins:                                 3          7          -                      
        % Hit:                                         57.14%        100          -                      
    Coverpoint c_in_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint serial_in_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint dir_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR0                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
    Cross CR1                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
    Cross CR2                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
    Cross CR3                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR4                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR5                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR6                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR7                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
 Covergroup instance \/alsu_pkg::alsu_class::cvr_gp  
                                                       67.98%        100          -    Uncovered            
    covered/total bins:                                    26         43          -                      
    missing/total bins:                                    17         43          -                      
    % Hit:                                             60.46%        100          -                      
    Coverpoint A_cp0                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                        4          1          -    Covered              
        bin A_data_max                                      2          1          -    Covered              
        bin A_data_min                                      1          1          -    Covered              
        default bin A_data_default                          8                     -    Occurred             
    Coverpoint A_cp1                                   33.33%        100          -    Uncovered            
        covered/total bins:                                 1          3          -                      
        missing/total bins:                                 2          3          -                      
        % Hit:                                         33.33%        100          -                      
        bin A_data_walkingones[-4]                          0          1          -    ZERO                 
        bin A_data_walkingones[1]                           0          1          -    ZERO                 
        bin A_data_walkingones[2]                           1          1          -    Covered              
    Coverpoint B_cp0                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
        bin B_data_0                                        4          1          -    Covered              
        bin B_data_max                                      4          1          -    Covered              
        bin B_data_min                                      0          1          -    ZERO                 
        default bin B_data_default                          7                     -    Occurred             
    Coverpoint B_cp1                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
        bin B_data_walkingones[-4]                          0          1          -    ZERO                 
        bin B_data_walkingones[1]                           1          1          -    Covered              
        bin B_data_walkingones[2]                           2          1          -    Covered              
    Coverpoint ALU_cp                                  57.14%        100          -    Uncovered            
        covered/total bins:                                 4          7          -                      
        missing/total bins:                                 3          7          -                      
        % Hit:                                         57.14%        100          -                      
        illegal_bin Bins_invalid                            0                     -    ZERO                 
        bin Bins_shift[SHIFT]                               4          1          -    Covered              
        bin Bins_shift[ROTATE]                              5          1          -    Covered              
        bin Bins_arith[ADD]                                 0          1          -    ZERO                 
        bin Bins_arith[MULTI]                               0          1          -    ZERO                 
        bin Bins_bitwise[OR]                                4          1          -    Covered              
        bin Bins_bitwise[XOR]                               2          1          -    Covered              
        bin Bins_trans                                      0          1          -    ZERO                 
    Coverpoint c_in_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin c_in_0                                          7          1          -    Covered              
        bin c_in_1                                          8          1          -    Covered              
    Coverpoint serial_in_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin serial_in_0                                    10          1          -    Covered              
        bin serial_in_1                                     5          1          -    Covered              
    Coverpoint dir_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin dir_0                                          11          1          -    Covered              
        bin dir_1                                           4          1          -    Covered              
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin red_op_A_HIGH                                   2          1          -    Covered              
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin red_op_B_HIGH                                   7          1          -    Covered              
    Cross CR0                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin1                                        0          1          -    ZERO                 
            bin bin2                                        0          1          -    ZERO                 
            bin bin3                                        0          1          -    ZERO                 
    Cross CR1                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin4                                        0          1          -    ZERO                 
            bin bin5                                        0          1          -    ZERO                 
            bin bin6                                        0          1          -    ZERO                 
    Cross CR2                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin7                                        0          1          -    ZERO                 
            bin bin8                                        0          1          -    ZERO                 
    Cross CR3                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin9                                        1          1          -    Covered              
            bin bin10                                       3          1          -    Covered              
    Cross CR4                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bins11                                      6          1          -    Covered              
            bin bins12                                      3          1          -    Covered              
    Cross CR5                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin13                                       1          1          -    Covered              
    Cross CR6                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin14                                       2          1          -    Covered              
    Cross CR7                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin15                                       0          1          -    ZERO                 
            bin bin16                                       0          1          -    ZERO                 
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       2         2         0   100.00%

================================Statement Details================================

Statement Coverage for instance /alsu_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File package.sv
    3                                                package alsu_pkg;
    4                                                    typedef enum bit[2:0]{OR,XOR,ADD,MULTI,SHIFT,ROTATE,INVALID_6,INVALID_7}opcode_e;
    5                                                    typedef enum {MAXPOS = 3,MAXNEG = -4,ZER0 = 0}reg_e;
    6                                                
    7                                                    class alsu_class;
    8                                                        rand logic clk, rst, cin, red_op_A, red_op_B, bypass_A, bypass_B, direction, serial_in;
    9                                                        rand logic signed [2:0]A,B;
    10                                                       rand opcode_e opcode;
    11                                                       rand reg_e A_limit,B_limit;
    12                                                       rand logic [3:0]A_others,B_others;
    13              1                          1             bit [2:0]ones[] = '{3'b100,3'b010,3'b001};
    14                                                       rand bit[2:0]ones_t,ones_f;
    15                                               
    16                                                       rand opcode_e array_opcode[6];
    17                                                       /********************************************
    18                                                       * 
    19                                                       *               Constraints
    20                                                       *       
    21                                                       ********************************************/
    22                                                       constraint rst_cons
    23                                                       {
    24                                                           rst dist{1:= 2 ,0:= 98};
    25                                                       }
    26                                               
    27                                                       constraint A_B_cons
    28                                                       {
    29                                                           //preparing the values of the variables
    30                                                           A_others != (MAXPOS || MAXNEG || ZER0); 
    31                                                           B_others != (MAXPOS || MAXNEG || ZER0); 
    32                                                           ones_t inside {ones};
    33                                                           !(ones_f inside {ones});
    34                                               
    35                                                           //constraint A and B with differenet opcodes
    36                                                           if(opcode == OR || opcode == XOR)
    37                                                           {
    38                                                               if(red_op_A == 1)
    39                                                               {
    40                                                                   B == 0;
    41                                                                   A dist{ones_t:=80,ones_f:=20};
    42                                                               }
    43                                                               else if(red_op_B == 1)
    44                                                               {
    45                                                                   A == 0;
    46                                                                   B dist{ones_t:=80,ones_f:=20};
    47                                                               }
    48                                                           }
    49                                                           /*here the opcode -> ADD , MULTI
    50                                                           so must the invaid cases occur less frequent than the valid cases,
    51                                                           so we increase the probability during ADD , MULTI opcodes*/
    52                                                           else
    53                                                           {
    54                                                               red_op_A dist {1:=20,0:=80};
    55                                                               red_op_B dist {1:=20,0:=80};
    56                                                               if(opcode == ADD || opcode == MULTI)
    57                                                               {
    58                                                                   A dist {A_limit:=80,A_others:=20};
    59                                                                   B dist {B_limit:=80,B_others:=20};
    60                                                               }
    61                                                           }
    62                                                       }
    63                                               
    64                                                       constraint opcode_cons
    65                                                       {
    66                                                           opcode dist {[OR:ROTATE]:=80,[INVALID_6:INVALID_7]:=20};
    67                                                       }
    68                                               
    69                                                       constraint bypass_cons
    70                                                       {
    71                                                           bypass_A dist{1:=2,0:=98};
    72                                                           bypass_B dist{1:=2,0:=98};
    73                                                       }
    74                                               
    75                                                       //the 8 constraint
    76                                                       constraint unique_valid_opcodes
    77                                                       {
    78                                                         foreach(array_opcode[i])
    79                                                           foreach(array_opcode[j])
    80                                                           {
    81                                                               if(i != j)
    82                                                               {
    83                                                                   array_opcode[i] != array_opcode[j];
    84                                                                   array_opcode[i] inside {[OR:ROTATE]};
    85                                                               }
    86                                                           }
    87                                                       } 
    88                                                       /********************************************
    89                                                       * 
    90                                                       *           Function coverage
    91                                                       *       
    92                                                       ********************************************/
    93                                                       covergroup cvr_gp;
    94                                                           //coverpoint for ports A ,B
    95                                                           A_cp0:coverpoint A
    96                                                           {
    97                                                              bins A_data_0 = {0};
    98                                                              bins A_data_max = {MAXPOS};
    99                                                              bins A_data_min = {MAXNEG};
    100                                                             bins A_data_default = default ;
    101                                                          }
    102                                                          A_cp1:coverpoint A iff(red_op_A)
    103                                                          {
    104                                                             bins A_data_walkingones[] = {1,2,-4}; 
    105                                                          }
    106                                                          B_cp0:coverpoint B
    107                                                          {
    108                                                              bins B_data_0 = {0};
    109                                                              bins B_data_max = {MAXPOS};
    110                                                              bins B_data_min = {MAXNEG};
    111                                                              bins B_data_default = default ;
    112                                                          }
    113                                                          B_cp1:coverpoint B iff(red_op_B && (!red_op_A))
    114                                                          {
    115                                                              bins B_data_walkingones[] = {1,2,-4};
    116                                                          }
    117                                                          ALU_cp:coverpoint opcode
    118                                                          {
    119                                                              bins Bins_shift[] = {SHIFT,ROTATE};
    120                                                              bins Bins_arith[] = {ADD,MULTI};
    121                                                              bins Bins_bitwise[] = {OR,XOR};
    122                                                              illegal_bins Bins_invalid = {INVALID_6,INVALID_7};
    123                                                              bins Bins_trans = (OR=>XOR=>ADD=>MULTI=>SHIFT=>ROTATE); 
    124                                                          }
    125                                                          /************Cross coverage*************/ 
    126                                                          /**Cross 0**/
    127                                                          //cross between opcode and A
    128                                                          CR0:cross ALU_cp , A_cp0
    129                                                          {
    130                                                              option.cross_auto_bin_max = 0;
    131                                                              bins bin1 = binsof(ALU_cp.Bins_arith) && binsof(A_cp0.A_data_0);
    132                                                              bins bin2 = binsof(ALU_cp.Bins_arith) && binsof(A_cp0.A_data_max);
    133                                                              bins bin3 = binsof(ALU_cp.Bins_arith) && binsof(A_cp0.A_data_min);
    134                                                          }
    135                                                          /**Cross 1**/
    136                                                          //cross between opcode and B
    137                                                          CR1:cross ALU_cp , B_cp0
    138                                                          {
    139                                                              option.cross_auto_bin_max = 0;
    140                                                              bins bin4 = binsof(ALU_cp.Bins_arith) && binsof(B_cp0.B_data_0);
    141                                                              bins bin5 = binsof(ALU_cp.Bins_arith) && binsof(B_cp0.B_data_max);
    142                                                              bins bin6 = binsof(ALU_cp.Bins_arith) && binsof(B_cp0.B_data_min);
    143                                                          }
    144                                                          /**Cross 2**/
    145                                                          c_in_cp:coverpoint cin
    146                                                          {
    147                                                              bins c_in_0 = {0};
    148                                                              bins c_in_1 = {1};
    149                                                          }
    150                                                          CR2:cross ALU_cp , c_in_cp
    151                                                          {
    152                                                              option.cross_auto_bin_max = 0;
    153                                                              bins bin7 = binsof(ALU_cp.Bins_arith) intersect {ADD} && binsof(c_in_cp.c_in_0);
    154                                                              bins bin8 = binsof(ALU_cp.Bins_arith) intersect {ADD} && binsof(c_in_cp.c_in_1);
    155                                                          }
    156                                                          /**Cross 3**/
    157                                                          serial_in_cp:coverpoint serial_in
    158                                                          {
    159                                                              bins serial_in_0 = {0};
    160                                                              bins serial_in_1 = {1};
    161                                                          }
    162                                                          CR3:cross ALU_cp , serial_in_cp
    163                                                          {
    164                                                              option.cross_auto_bin_max = 0;
    165                                                              bins bin9 = binsof(ALU_cp.Bins_shift) intersect {SHIFT} && binsof(serial_in_cp.serial_in_0);
    166                                                              bins bin10 = binsof(ALU_cp.Bins_shift) intersect {SHIFT} && binsof(serial_in_cp.serial_in_1);
    167                                                          }
    168                                                          /**Cross 4**/
    169                                                          dir_cp:coverpoint direction
    170                                                          {
    171                                                              bins dir_0 = {0};
    172                                                              bins dir_1 = {1};
    173                                                          }
    174                                                          CR4:cross ALU_cp , dir_cp
    175                                                          {
    176                                                              option.cross_auto_bin_max = 0;
    177                                                              bins bins11 = binsof(ALU_cp.Bins_shift) && binsof(dir_cp.dir_0);
    178                                                              bins bins12 = binsof(ALU_cp.Bins_shift) && binsof(dir_cp.dir_1);
    179                                                          }
    180                                                          /**Cross 5**/
    181                                                          red_op_A_cp:coverpoint red_op_A
    182                                                          {
    183                                                              bins red_op_A_HIGH = {1};
    184                                                          }
    185                                                          CR5:cross ALU_cp , A_cp1 ,red_op_A_cp , B_cp0
    186                                                          {
    187                                                              option.cross_auto_bin_max = 0;
    188                                                              bins bin13 = binsof(ALU_cp.Bins_bitwise) && binsof(red_op_A_cp.red_op_A_HIGH) && binsof(A_cp1.A_data_walkingones) && binsof(B_cp0.B_data_0);
    189                                                          }
    190                                                          /**Cross 6**/
    191                                                          red_op_B_cp:coverpoint red_op_B
    192                                                          {
    193                                                              bins red_op_B_HIGH = {1};
    194                                                          }
    195                                                          CR6:cross ALU_cp , red_op_B_cp, B_cp1 , A_cp0
    196                                                          {
    197                                                              option.cross_auto_bin_max = 0;
    198                                                              bins bin14 = binsof(ALU_cp.Bins_bitwise) && binsof(red_op_B_cp.red_op_B_HIGH) && binsof(B_cp1.B_data_walkingones) && binsof(A_cp0.A_data_0);
    199                                                          }
    200                                                          /**Cross 7 -> Covered invalid cases**/
    201                                                          CR7:cross ALU_cp , red_op_A_cp , red_op_B_cp
    202                                                          {
    203                                                              option.cross_auto_bin_max = 0;
    204                                                              bins bin15 = binsof(ALU_cp) intersect{[ADD:ROTATE]} && binsof(red_op_A_cp.red_op_A_HIGH);
    205                                                              bins bin16 = binsof(ALU_cp) intersect{[ADD:ROTATE]} && binsof(red_op_B_cp.red_op_B_HIGH);
    206                                                          }
    207                                                      endgroup
    208                                              
    209                                                      //constructor
    210                                                      function new();
    211             1                          1                 cvr_gp = new();


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /alsu_pkg/alsu_class/cvr_gp                      67.98%        100          -    Uncovered            
    covered/total bins:                                    26         43          -                      
    missing/total bins:                                    17         43          -                      
    % Hit:                                             60.46%        100          -                      
    Coverpoint A_cp0                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint A_cp1                                   33.33%        100          -    Uncovered            
        covered/total bins:                                 1          3          -                      
        missing/total bins:                                 2          3          -                      
        % Hit:                                         33.33%        100          -                      
    Coverpoint B_cp0                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
    Coverpoint B_cp1                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
    Coverpoint ALU_cp                                  57.14%        100          -    Uncovered            
        covered/total bins:                                 4          7          -                      
        missing/total bins:                                 3          7          -                      
        % Hit:                                         57.14%        100          -                      
    Coverpoint c_in_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint serial_in_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint dir_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR0                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
    Cross CR1                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
    Cross CR2                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
    Cross CR3                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR4                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR5                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR6                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross CR7                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
 Covergroup instance \/alsu_pkg::alsu_class::cvr_gp  
                                                       67.98%        100          -    Uncovered            
    covered/total bins:                                    26         43          -                      
    missing/total bins:                                    17         43          -                      
    % Hit:                                             60.46%        100          -                      
    Coverpoint A_cp0                                  100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin A_data_0                                        4          1          -    Covered              
        bin A_data_max                                      2          1          -    Covered              
        bin A_data_min                                      1          1          -    Covered              
        default bin A_data_default                          8                     -    Occurred             
    Coverpoint A_cp1                                   33.33%        100          -    Uncovered            
        covered/total bins:                                 1          3          -                      
        missing/total bins:                                 2          3          -                      
        % Hit:                                         33.33%        100          -                      
        bin A_data_walkingones[-4]                          0          1          -    ZERO                 
        bin A_data_walkingones[1]                           0          1          -    ZERO                 
        bin A_data_walkingones[2]                           1          1          -    Covered              
    Coverpoint B_cp0                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
        bin B_data_0                                        4          1          -    Covered              
        bin B_data_max                                      4          1          -    Covered              
        bin B_data_min                                      0          1          -    ZERO                 
        default bin B_data_default                          7                     -    Occurred             
    Coverpoint B_cp1                                   66.66%        100          -    Uncovered            
        covered/total bins:                                 2          3          -                      
        missing/total bins:                                 1          3          -                      
        % Hit:                                         66.66%        100          -                      
        bin B_data_walkingones[-4]                          0          1          -    ZERO                 
        bin B_data_walkingones[1]                           1          1          -    Covered              
        bin B_data_walkingones[2]                           2          1          -    Covered              
    Coverpoint ALU_cp                                  57.14%        100          -    Uncovered            
        covered/total bins:                                 4          7          -                      
        missing/total bins:                                 3          7          -                      
        % Hit:                                         57.14%        100          -                      
        illegal_bin Bins_invalid                            0                     -    ZERO                 
        bin Bins_shift[SHIFT]                               4          1          -    Covered              
        bin Bins_shift[ROTATE]                              5          1          -    Covered              
        bin Bins_arith[ADD]                                 0          1          -    ZERO                 
        bin Bins_arith[MULTI]                               0          1          -    ZERO                 
        bin Bins_bitwise[OR]                                4          1          -    Covered              
        bin Bins_bitwise[XOR]                               2          1          -    Covered              
        bin Bins_trans                                      0          1          -    ZERO                 
    Coverpoint c_in_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin c_in_0                                          7          1          -    Covered              
        bin c_in_1                                          8          1          -    Covered              
    Coverpoint serial_in_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin serial_in_0                                    10          1          -    Covered              
        bin serial_in_1                                     5          1          -    Covered              
    Coverpoint dir_cp                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin dir_0                                          11          1          -    Covered              
        bin dir_1                                           4          1          -    Covered              
    Coverpoint red_op_A_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin red_op_A_HIGH                                   2          1          -    Covered              
    Coverpoint red_op_B_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin red_op_B_HIGH                                   7          1          -    Covered              
    Cross CR0                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin1                                        0          1          -    ZERO                 
            bin bin2                                        0          1          -    ZERO                 
            bin bin3                                        0          1          -    ZERO                 
    Cross CR1                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          3          -                      
        missing/total bins:                                 3          3          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin4                                        0          1          -    ZERO                 
            bin bin5                                        0          1          -    ZERO                 
            bin bin6                                        0          1          -    ZERO                 
    Cross CR2                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin7                                        0          1          -    ZERO                 
            bin bin8                                        0          1          -    ZERO                 
    Cross CR3                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin9                                        1          1          -    Covered              
            bin bin10                                       3          1          -    Covered              
    Cross CR4                                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bins11                                      6          1          -    Covered              
            bin bins12                                      3          1          -    Covered              
    Cross CR5                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin13                                       1          1          -    Covered              
    Cross CR6                                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin14                                       2          1          -    Covered              
    Cross CR7                                           0.00%        100          -    ZERO                 
        covered/total bins:                                 0          2          -                      
        missing/total bins:                                 2          2          -                      
        % Hit:                                          0.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin bin15                                       0          1          -    ZERO                 
            bin bin16                                       0          1          -    ZERO                 

TOTAL COVERGROUP COVERAGE: 67.98%  COVERGROUP TYPES: 1

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/ALSU_tb/#ublk#102282978#52/immed__53
                     ALSU_tb.sv(53)                     0          1

Total Coverage By Instance (filtered view): 62.98%

